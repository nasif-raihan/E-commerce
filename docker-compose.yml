services:
  nginx:
    image: nginx:latest
    container_name: ecommerce-nginx
    ports:
      - "8001:8000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    networks:
      - ecommerce-network
    depends_on:
      - web
    restart: always

  web:
    build:
      context: .
      args:
        ENVIRONMENT: "staging"
    container_name: ecommerce-app
    command: >
      bash -c "python manage.py migrate &&
               python manage.py collectstatic --noinput &&
               gunicorn project.wsgi:application --bind 0.0.0.0:8000 --workers=3 --threads=2"
    volumes:
      - static_volume:/app/staticfiles
      - ./media:/app/media
    env_file:
      - .env
    networks:
      - ecommerce-network
    restart: always
    depends_on:
      - db

  db:
    container_name: ecommerce-db
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    env_file:
      - .env
    ports:
      - "5433:5432"
    networks:
      - ecommerce-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ecommerce_db" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    restart: always

volumes:
  postgres_data:
  static_volume:

networks:
  ecommerce-network:
    driver: bridge
